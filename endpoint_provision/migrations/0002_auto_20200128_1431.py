# Generated by Django 2.2.6 on 2020-01-28 13:31

import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields.json
from django.db import migrations, models


def backward(apps, schema_editor):
    move_data(apps, schema_editor, reverse=True)


def move_data(apps, schema_editor, reverse=False):
    # NOTE: wont work with auto_now_add or many2manyfields

    from django.core.management.color import no_style
    from django.db import DEFAULT_DB_ALIAS, connections

    connection = connections[DEFAULT_DB_ALIAS]
    EndpointProvision = apps.get_model('endpoint_provision', 'EndpointProvision')
    EndpointProvisionData = apps.get_model('endpoint_provision', 'EndpointProvisionData')

    for task in apps.get_model('endpoint_provision', 'EndpointTask').objects.all():

        data_fields = (
            'backup',
            'commands',
            'configuration',
            'events',
            'firmware_url',
            'force_firmware',
            'password',
        )

        if reverse and not task.provision_id:
            continue

        source = task if not reverse else task.provision
        data = {k: getattr(source, k) for k in data_fields}

        if reverse:
            for k, v in data.items():
                setattr(task, k, v)
            task.user = task.provision.user
            task.save()

            continue

        data_obj = EndpointProvisionData.objects.create(**data)
        obj = EndpointProvision.objects.create(ts_created=task.ts_created, user=task.user, customer=task.customer, data=data_obj)

        task.provision = obj
        task.save()

    statements = connection.ops.sequence_reset_sql(no_style(), [EndpointProvision, EndpointProvisionData])
    schema_editor.connection.cursor().execute('\n'.join(statements))


class Migration(migrations.Migration):

    dependencies = [
        ('address', '0013_auto_20200125_1040'),
        ('provider', '0021_vcseprovider_customer'),
        ('endpoint', '0044_auto_20200124_0821'),
        ('endpoint_provision', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EndpointProvisionData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration', django_extensions.db.fields.json.JSONField(default=dict)),
                ('commands', django_extensions.db.fields.json.JSONField(default=dict)),
                ('backup', models.SmallIntegerField(choices=[(1, 'Backup'), (2, 'Restore')], null=True)),
                ('events', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=100)),
                ('force_firmware', models.BooleanField(default=False)),
                ('address_book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='address.AddressBook')),
                ('firmware', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='endpoint_provision.EndpointFirmware')),
                ('firmware_url', models.CharField(max_length=200)),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='endpoint_provision.EndpointTemplate')),
            ],
        ),
        migrations.CreateModel(
            name='EndpointProvision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100)),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider.Customer')),
                ('data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='endpoint_provision.EndpointProvisionData')),
                ('endpoints', models.ManyToManyField(to='endpoint.Endpoint')),
            ],
        ),
        migrations.AddField(
            model_name='endpointtask',
            name='data',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='endpoint_provision.EndpointProvisionData'),
        ),
        migrations.AddField(
            model_name='endpointtask',
            name='provision',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='endpoint_provision.EndpointProvision'),
        ),
        migrations.RunPython(move_data, reverse_code=backward),
    ]
