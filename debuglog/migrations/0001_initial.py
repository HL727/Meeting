# Generated by Django 2.2.6 on 2020-01-22 15:47
import compressed_store.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('endpoint', '0040_endpointheadcount_endpointroompresence'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcanoCDRLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('content_compressed', models.BinaryField()),
                ('extra_compressed', models.BinaryField(null=True)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('id_prefixes', models.CharField(max_length=100, verbose_name='Store first digits of leg/call ids for searching')),
            ],
            options={
                'abstract': False,
            },
            bases=(compressed_store.models.CompressedContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AcanoCDRSpamLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('content_compressed', models.BinaryField()),
                ('extra_compressed', models.BinaryField(null=True)),
                ('ip', models.GenericIPAddressField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(compressed_store.models.CompressedContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('content_compressed', models.BinaryField()),
                ('extra_compressed', models.BinaryField(null=True)),
                ('sender', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
            bases=(compressed_store.models.CompressedContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VCSCallLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('content_compressed', models.BinaryField()),
                ('extra_compressed', models.BinaryField(null=True)),
                ('ts_start', models.DateTimeField(null=True)),
                ('ts_stop', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(compressed_store.models.CompressedContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EndpointCiscoEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('content_compressed', models.BinaryField()),
                ('extra_compressed', models.BinaryField(null=True)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('event', models.CharField(max_length=100)),
                ('endpoint', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='endpoint.Endpoint')),
            ],
            options={
                'abstract': False,
            },
            bases=(compressed_store.models.CompressedContentMixin, models.Model),
        ),
    ]
